# Our starting point is a plain Apache httpd with mod_php installed.
# See https://hub.docker.com/_/php/
#
# The actual vuln CVE-2015-3306, does not need PHP, it's just I use
# a PHP payload as an example.

FROM php:7.2-apache

# ProFTP will use the standard FTP port
# So use: docker run -p 21:21
EXPOSE 21/tcp
EXPOSE 80/tcp

WORKDIR /root

# Update and install tools to compile and check operation of ProFTP
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    git \
    net-tools \
    nmap \
    && rm -rf /var/lib/apt/lists/*

# Install ProFTP 1.3.5rc1 from github source
# https://github.com/proftpd/proftpd.git
#    ./configure --prefix=/usr/local --sysconfdir=/etc --localstatedir=/var && \
RUN git config --global http.sslVerify false && \
    git clone https://github.com/proftpd/proftpd.git && \
    cd proftpd && \
    git checkout 8127d5765e23c2b6656ccec4a2d1520103f8e9b7 && \
    ./configure --with-modules=mod_copy --prefix=/usr/local --sysconfdir=/etc --localstatedir=/var && \
    make && \
    make install

# The exploit only works if the Web served directory is writable
# as this is where the payload is written.
# RUN chmod 777 /usr/local/apache2/htdocs
RUN chmod 777 /var/www/html

# Need to run proftp/proftpd
# and have Apache run.
COPY run_servers.sh run_servers.sh
ENTRYPOINT ["bash", "./run_servers.sh"]

